"""Added Mood Table and Default Moods

Revision ID: 3d9f2fcdfeaa
Revises: d3d001b7ae46
Create Date: 2019-10-01 23:32:19.163599

"""
import uuid
from alembic import op, context
import sqlalchemy as sa
from sqlalchemy.sql import table, column


# revision identifiers, used by Alembic.
revision = "3d9f2fcdfeaa"
down_revision = "d3d001b7ae46"
branch_labels = None
depends_on = None


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get("data", None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get("data", None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "moods",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("public_id", sa.String(length=100), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("colour", sa.String(length=50), nullable=False),
        sa.Column("template_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["template_id"], ["mood_templates.id"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("public_id"),
    )
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("moods")
    # ### end Alembic commands ###


def data_upgrades():
    """ get the mood template table"""
    template = table(
        "mood_templates",
        column("id", sa.Integer),
        column("public_id", sa.String),
        column("name", sa.String),
    )
    op.bulk_insert(
        template, [{"public_id": str(uuid.uuid4()), "name": "Default Mood Template"}]
    )

    """ get the mood table"""
    mood = table(
        "moods",
        column("id", sa.Integer),
        column("public_id", sa.String),
        column("name", sa.String),
        column("colour", sa.String),
        column("template_id", sa.Integer),
    )
    op.bulk_insert(
        mood,
        [
            {
                "public_id": str(uuid.uuid4()),
                "name": "Amazing",
                "colour": "#53d192",
                "template_id": 1,
            },
            {
                "public_id": str(uuid.uuid4()),
                "name": "Great",
                "colour": "#5e95ed",
                "template_id": 1,
            },
            {
                "public_id": str(uuid.uuid4()),
                "name": "Okay",
                "colour": "#ede357",
                "template_id": 1,
            },
            {
                "public_id": str(uuid.uuid4()),
                "name": "Poor",
                "colour": "#e28f53",
                "template_id": 1,
            },
            {
                "public_id": str(uuid.uuid4()),
                "name": "Awful",
                "colour": "#e05f4e",
                "template_id": 1,
            },
        ],
    )


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
