"""Added Team Role Table

Revision ID: 7d0f5eec0baf
Revises: 62d8b8b5039b
Create Date: 2019-09-24 19:40:01.977211

"""
import uuid
from alembic import op, context
import sqlalchemy as sa
from sqlalchemy.sql import table, column


# revision identifiers, used by Alembic.
revision = "7d0f5eec0baf"
down_revision = "62d8b8b5039b"
branch_labels = None
depends_on = None


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get("data", None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get("data", None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "team_role",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("public_id", sa.String(length=100), nullable=True),
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("public_id"),
    )
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("team_role")
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    team_role = table(
        "team_role",
        column("id", sa.Integer),
        column("public_id", sa.String),
        column("name", sa.String),
    )
    op.bulk_insert(
        team_role,
        [
            {"public_id": str(uuid.uuid4()), "name": "Admin"},
            {"public_id": str(uuid.uuid4()), "name": "Member"},
        ],
    )


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
